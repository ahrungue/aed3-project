package corn.controllers;

import corn.models.Question;
import corn.services.QuestionService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.*;

/**
 * @author alvaro
 * @since 16/02/2015
 */
@RestController
@RequestMapping(value = "/rest/play")
public class PlayController {

	@Autowired
	private QuestionService questionService;

	@RequestMapping(method = RequestMethod.GET)
	public Map<String, Object> play(){

        //Structure to return as json
		Map<String, Object> map = new HashMap<String, Object>();

        //List of questions to use in the game
        List<Question> list = questionService.findAll();

        //Check if the list is not empty or null
        if( (list == null) || (list.isEmpty()) ){
            list =  autoGeneratedQuestions();
        }//end if

		//Buscar as perguntas salvas para iniciar o jogo
		map.put("questions", list);

		return map;
	}//fim play()

    private List<Question> autoGeneratedQuestions(){

        return new ArrayList<Question>(){{

            add(new Question(){{
                setQuestion("Qual das opções abaixo não é um paradigma ligado a linguagens de programação ?");
                setAnswer(0);
                setOptions("Concorrente;Orientada a objetos;Funcional;Imperativa");
               setId(UUID.randomUUID().toString());
            }});

            add(new Question(){{
                setQuestion("Qual dos SGBDs abaixo não possui suporte ao NoSQL ?");
                setAnswer(1);
                setOptions("Mongo;Oracle;PostgreSQL;Cassandra");
                setId(UUID.randomUUID().toString());
            }});

        }};// end return

    }//end autoGeneratedQuestions()

}//fim class PlayController

